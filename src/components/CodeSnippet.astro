---
interface Props {
  filename?: string;
  description?: string;
}

const { filename } = Astro.props;
---

<figure class="not-prose my-8 space-y-2">
  <div class="group relative">
    <button
      class="absolute right-2 top-2 flex h-8 w-8 items-center justify-center rounded-md border border-zinc-200 bg-zinc-50/80 text-zinc-800 opacity-0 backdrop-blur-sm transition-opacity group-hover:opacity-100"
      id="copyButton"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="absolute h-4 w-4"
      >
        <path
          id="copy"
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 0 1-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 0 1 1.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 0 0-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 0 1-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 0 0-3.375-3.375h-1.5a1.125 1.125 0 0 1-1.125-1.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H9.75"
        ></path>
        <path
          id="copied"
          style="visibility: hidden;"
          stroke-linecap="round"
          stroke-linejoin="round"
          d="m4.5 12.75 6 6 9-13.5"></path>
      </svg>
    </button>
    <slot />
    {
      filename && (
        <div class="rounded-b-lg border border-zinc-200 bg-zinc-50 p-2 text-xs">
          <span>{filename}</span>
        </div>
      )
    }
  </div>
  <slot name="description" />
</figure>

<script>
  const copyButtons = document.querySelectorAll("#copyButton");

  copyButtons.forEach((button) => {
    const parent = button.parentElement!;
    const copyIcon = button.querySelector<SVGPathElement>("#copy")!;
    const copiedIcon = button.querySelector<SVGPathElement>("#copied")!;

    parent.addEventListener("mouseenter", () => {
      copiedIcon.style.visibility = "hidden";
      copyIcon.style.visibility = "visible";
    });

    button.addEventListener("click", async () => {
      const code = parent.querySelector(".astro-code")!.textContent!;

      const type = "text/plain";
      const blob = new Blob([code], { type });
      const data = [new ClipboardItem({ [type]: blob })];
      await navigator.clipboard.write(data);

      copiedIcon.style.visibility = "visible";
      copyIcon.style.visibility = "hidden";
    });
  });
</script>

<style is:global>
  .astro-code {
    @apply rounded-lg border border-zinc-200 py-4 text-sm;

    &:has(+ div) {
      @apply rounded-b-none border-b-0;
    }

    code {
      @apply block w-fit min-w-full px-4;

      span.highlighted {
        @apply -mx-4 inline-block w-[calc(100%+32px)] bg-zinc-100 px-4 before:content-['\200b'];
      }
    }
  }
</style>
